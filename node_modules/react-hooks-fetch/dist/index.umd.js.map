{"version":3,"file":"index.umd.js","sources":["../src/FetchProvider.ts","../src/useFetch.ts"],"sourcesContent":["import {\n  ComponentType,\n  Dispatch,\n  ReactNode,\n  SetStateAction,\n  createElement,\n  useCallback,\n  useState,\n} from 'react';\n\nimport { createContext, useContextSelector, useContextUpdate } from 'use-context-selector';\n\nexport type FetchFunc<Input, Result> = (input: Input) => Promise<Result>;\n\nexport type FetchState<Input, Result> = {\n  input: Input;\n  result?: Result;\n  error?: unknown;\n  promise?: Promise<void>;\n}\n\nexport const createFetchState = <Input, Result>(\n  fn: FetchFunc<Input, Result>,\n  input: Input,\n) => {\n  const state: FetchState<Input, Result> = {\n    input,\n  };\n  state.promise = new Promise<void>((resolve, reject) => {\n    fn(input).then((r) => {\n      state.result = r;\n      resolve();\n    }).catch((e) => {\n      state.error = e;\n      reject(e);\n    }).finally(() => {\n      delete state.promise;\n    });\n  });\n  return state;\n};\n\nconst NO_PROVIDER = 'NO_PROVIDER';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype FetchMap = Map<FetchFunc<any, any>, FetchState<any, any>>;\n\ntype MapState = readonly [\n  FetchMap,\n  Dispatch<SetStateAction<FetchMap>>\n]\n\nconst FetchContext = createContext<MapState | null>(null);\n\ntype FetchProviderProps = {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, react/require-default-props\n  initialInputs?: Iterable<readonly [FetchFunc<any, any>, any]>\n  children: ReactNode;\n};\n\n/**\n * FetchProvider component\n *\n * Put this component higher in the component tree.\n *\n * @example\n * import { FetchProvider } from 'react-hooks-fetch';\n *\n * const App = () => (\n *   <FetchProvider initialInputs={[[fn, input]]}>\n *     ...\n *   </FetchProvider>\n * );\n */\nexport const FetchProvider = ({ initialInputs, children }: FetchProviderProps) => {\n  const createMap = () => {\n    const map = new Map();\n    if (initialInputs) {\n      for (const [fn, input] of initialInputs) {\n        map.set(fn, createFetchState(fn, input));\n      }\n    }\n    return map;\n  };\n  return createElement(\n    FetchContext.Provider as ComponentType<{ value: MapState }>,\n    { value: useState(createMap) },\n    children,\n  );\n};\n\nexport const useFetchState = <Input, Result>(\n  fn: FetchFunc<Input, Result>,\n) => {\n  const state = useContextSelector(\n    FetchContext,\n    (mapState) => {\n      if (!mapState) {\n        return NO_PROVIDER;\n      }\n      return mapState[0].get(fn) as FetchState<Input, Result> | undefined;\n    },\n  );\n  if (state === NO_PROVIDER) {\n    throw new Error('missing Provider');\n  }\n  return state;\n};\n\nexport const useSetFetchState = <Input, Result>(\n  fn: FetchFunc<Input, Result>,\n) => {\n  const update = useContextUpdate(FetchContext);\n  const setMapState = useContextSelector(\n    FetchContext,\n    (mapState) => {\n      if (!mapState) {\n        return NO_PROVIDER;\n      }\n      return mapState[1];\n    },\n  );\n  if (setMapState === NO_PROVIDER) {\n    throw new Error('missing Provider');\n  }\n  const setFetchState = useCallback((\n    nextState: FetchState<Input, Result>,\n  ) => {\n    update(() => {\n      setMapState((prev) => new Map(prev).set(fn, nextState));\n    }, { suspense: true });\n  }, [update, setMapState, fn]);\n  return setFetchState;\n};\n","import { useCallback } from 'react';\n\nimport {\n  FetchFunc,\n  createFetchState,\n  useFetchState,\n  useSetFetchState,\n} from './FetchProvider';\n\n/**\n * useRefetch hook\n *\n * This returns only `refetch` part of what `useFetch` returns.\n *\n * @example\n * import { useFetch } from 'react-hooks-fetch';\n *\n * const refetch = useRefetch(desc);\n * refetch('1');\n */\nexport function useRefetch<Input, Result>(\n  fn: FetchFunc<Input, Result>,\n) {\n  const setFetchState = useSetFetchState(fn);\n  const refetch = useCallback((input: Input) => {\n    setFetchState(createFetchState(fn, input));\n  }, [setFetchState, fn]);\n  return refetch;\n}\n\nexport function useFetch<Input, Result>(\n  fn: FetchFunc<Input, Result>,\n  options: { allowUndefined: true },\n): {\n  input: Input | undefined;\n  result: Result | undefined;\n  refetch: (input: Input) => void;\n};\n\nexport function useFetch<Input, Result>(\n  fn: FetchFunc<Input, Result>,\n): {\n  input: Input;\n  result: Result;\n  refetch: (input: Input) => void;\n};\n\n/**\n * useFetch hook\n *\n * This is the main hook to be used.\n *\n * @example\n * import { useFetch } from 'react-hooks-fetch';\n *\n * const { input, result, refetch } = useFetch(desc);\n */\nexport function useFetch<Input, Result>(\n  fn: FetchFunc<Input, Result>,\n  options?: { allowUndefined: boolean },\n) {\n  let state = useFetchState(fn);\n  if (!state && options?.allowUndefined) {\n    state = { input: undefined as unknown as Input };\n  }\n  if (!state) {\n    throw new Error('missing initial input');\n  }\n  if ('promise' in state) {\n    throw state.promise;\n  }\n  if ('error' in state) {\n    throw state.error;\n  }\n  return {\n    input: state.input,\n    result: state.result as Result,\n    refetch: useRefetch(fn),\n  };\n}\n"],"names":["createFetchState","fn","input","state","promise","Promise","resolve","reject","then","r","result","e","error","NO_PROVIDER","FetchContext","createContext","useRefetch","setFetchState","update","useContextUpdate","setMapState","useContextSelector","mapState","Error","useCallback","nextState","prev","Map","set","suspense","useSetFetchState","initialInputs","children","_ref","createElement","Provider","value","useState","map","useFetch","options","get","useFetchState","allowUndefined","undefined","refetch"],"mappings":"ocAqBO,IAAMA,EAAmB,SAC9BC,EACAC,GAEA,IAAMC,EAAmC,CACvCD,MAAAA,GAaF,OAXAC,EAAMC,QAAU,IAAIC,QAAc,SAACC,EAASC,GAC1CN,EAAGC,GAAOM,KAAK,SAACC,GACdN,EAAMO,OAASD,EACfH,MAFF,MAGS,SAACK,GACRR,EAAMS,MAAQD,EACdJ,EAAOI,aACE,kBACFR,EAAMC,YAGVD,GAGHU,EAAc,cAUdC,EAAeC,gBAA+B,MChC9C,SAAUC,EACdf,GAEA,IAAMgB,EDsFwB,SAC9BhB,GAEA,IAAMiB,EAASC,EAAgBA,iBAACL,GAC1BM,EAAcC,qBAClBP,EACA,SAACQ,GACC,OAAKA,EAGEA,EAAS,GAFPT,IAKb,GAAIO,IAAgBP,EAClB,UAAUU,MAAM,oBASlB,OAPsBC,EAAWA,YAAC,SAChCC,GAEAP,EAAO,WACLE,EAAY,SAACM,UAAaC,IAAAA,IAAID,GAAME,IAAI3B,EAAIwB,MAC3C,CAAEI,UAAU,KACd,CAACX,EAAQE,EAAanB,IC5GH6B,CAAiB7B,GAIvC,OAHgBuB,EAAAA,YAAY,SAACtB,GAC3Be,EAAcjB,EAAiBC,EAAIC,KAClC,CAACe,EAAehB,oBDgDQ,YAAG8B,IAAAA,EAAAA,EAAAA,cAAeC,EAAkCC,EAAlCD,SAU7C,OAAOE,gBACLpB,EAAaqB,SACb,CAAEC,MAAOC,WAXO,WAChB,IAAMC,EAAM,IAAIX,IAChB,GAAII,EACF,IAA0BA,MAAAA,2qBAAAA,CAAAA,kBAAe,CAA7B9B,IAAAA,EAAAA,EAAAA,MAAAA,EAAIC,EAAAA,GACdoC,EAAIV,IAAI3B,EAAID,EAAiBC,EAA7BqC,EAAAA,KAGJ,OAAOA,KAKPN,eC9BYO,SACdtC,EACAuC,GAEA,IAAIrC,ED8BuB,SAC3BF,GAEA,IAAME,EAAQkB,qBACZP,EACA,SAACQ,GACC,OAAKA,EAGEA,EAAS,GAAGmB,IAAIxC,GAFdY,IAKb,GAAIV,IAAUU,EACZ,UAAUU,MAAM,oBAElB,OAAOpB,EC7CKuC,CAAczC,GAI1B,IAHKE,GAASqC,MAAAA,GAAAA,EAASG,iBACrBxC,EAAQ,CAAED,WAAO0C,KAEdzC,EACH,MAAUoB,IAAAA,MAAM,yBAElB,GAAI,YAAapB,EACf,MAAMA,EAAMC,QAEd,GAAI,UAAWD,EACb,MAAMA,EAAMS,MAEd,MAAO,CACLV,MAAOC,EAAMD,MACbQ,OAAQP,EAAMO,OACdmC,QAAS7B,EAAWf"}